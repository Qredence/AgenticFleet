{
  "name": "AgenticFleet Dev Container",
  "image": "mcr.microsoft.com/devcontainers/python:3",
  
  "workspaceFolder": "/workspace",
  
  // Mount configurations with improved caching
  "mounts": [
    "source=${localWorkspaceFolder}/.env,target=/workspace/.env,type=bind,consistency=cached",
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
    "source=pip-cache,target=/root/.cache/pip,type=volume",
    "source=node-modules-cache,target=/workspace/node_modules,type=volume"
  ],

  // Environment variables
  "containerEnv": {
    "ENV_FILE": ".env",
    "PYTHONUNBUFFERED": "1",
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONPATH": "/workspace"
  },

  // Port forwarding
  "forwardPorts": [8001, 8000],
  "portsAttributes": {
    "8001": {
      "label": "AgenticFleet Web UI",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Development Server",
      "onAutoForward": "openBrowser"
    }
  },

  // Post-create commands using the script
  "postCreateCommand": ".devcontainer/post-create.sh",

  // VS Code specific customizations
  "customizations": {
    "vscode": {
      "extensions": [
        // Python Development
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "charliermarsh.ruff",
        "ms-python.mypy-type-checker",
        
        // Testing and Debugging
        "littlefoxteam.vscode-python-test-adapter",
        "hbenl.vscode-test-explorer",
        
        // Docker and Containers
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        
        // Git and Version Control
        "eamodio.gitlens",
        "mhutchie.git-graph",
        
        // Productivity
        "streetsidesoftware.code-spell-checker",
        "usernamehw.errorlens"
      ],
      "settings": {
        // Python Configuration
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.ruffEnabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "mypy.enabled": true,
        "mypy.run": "onType",
        
        // Editor Preferences
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        
        // Spell Checking
        "cSpell.language": "en"
      }
    }
  },

  // Remote environment variables with secure handling
  "remoteEnv": {
    "AZURE_OPENAI_API_KEY": "${localEnv:AZURE_OPENAI_API_KEY}",
    "AZURE_OPENAI_ENDPOINT": "${localEnv:AZURE_OPENAI_ENDPOINT}",
    "OPENAI_API_KEY": "${localEnv:OPENAI_API_KEY}"
  }
}