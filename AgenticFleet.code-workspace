{
  "folders": [
    {
      "path": "."
    }
  ],
  "settings": {
    // Python interpreter settings
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    "python.terminal.activateEnvironment": true,
    "python.terminal.activateEnvInCurrentTerminal": true,
    // Disable automatic environment discovery to prevent loops
    "python.interpreter.infoVisibility": "never",
    "python.experiments.enabled": false,
    // Python analysis settings
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.extraPaths": [
      "${workspaceFolder}"
    ],
    "python.analysis.indexing": true,
    // Formatting and linting (Ruff native language server)
    "[python]": {
      "editor.formatOnSave": true,
      "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit",
        "source.fixAll.ruff": "explicit"
      }
    },
    "ruff.lineLength": 100,
    "ruff.lint.select": [
      "E",
      "F",
      "W",
      "I",
      "UP"
    ],
    // Deprecated settings - kept for backwards compatibility
    "python.linting.enabled": true,
    "python.linting.ruffEnabled": true,
    // Test discovery
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.pytestArgs": [
      "tests"
    ],
    "python.testing.autoTestDiscoverOnSaveEnabled": false,
    // Editor settings
    "editor.formatOnSave": true,
    "editor.rulers": [
      100
    ],
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    // File exclusions for better performance
    "files.watcherExclude": {
      "**/.venv/**": true,
      "**/__pycache__/**": true,
      "**/.pytest_cache/**": true,
      "**/.ruff_cache/**": true,
      "**/logs/**": true
    },
    "search.exclude": {
      "**/.venv/**": true,
      "**/__pycache__/**": true,
      "**/.pytest_cache/**": true,
      "**/.ruff_cache/**": true,
      "**/logs/**": true
    }
  }
}
